{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/lib/mongodb.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst MONGODB_URI = process.env.MONGODB_URI;\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable.');\n}\n\nlet cached = global.mongoose || { conn: null, promise: null };\n\nasync function connectMongo() {\n  if (cached.conn) return cached.conn;\n\n  if (!cached.promise) {\n    cached.promise = mongoose.connect(MONGODB_URI, {\n      bufferCommands: false,\n    }).then((mongoose) => mongoose);\n  }\n\n  cached.conn = await cached.promise;\n  global.mongoose = cached;\n  return cached.conn;\n}\n\nmodule.exports = connectMongo;\n"],"names":[],"mappings":"AAAA,MAAM;AAEN,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW;AAE3C,IAAI,CAAC,aAAa;IAChB,MAAM,IAAI,MAAM;AAClB;AAEA,IAAI,SAAS,OAAO,QAAQ,IAAI;IAAE,MAAM;IAAM,SAAS;AAAK;AAE5D,eAAe;IACb,IAAI,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAEnC,IAAI,CAAC,OAAO,OAAO,EAAE;QACnB,OAAO,OAAO,GAAG,SAAS,OAAO,CAAC,aAAa;YAC7C,gBAAgB;QAClB,GAAG,IAAI,CAAC,CAAC,WAAa;IACxB;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,QAAQ,GAAG;IAClB,OAAO,OAAO,IAAI;AACpB;AAEA,OAAO,OAAO,GAAG","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/models/User.js"],"sourcesContent":["// models/User.js\nimport mongoose from 'mongoose';\n\n\nconst userSchema = new mongoose.Schema({\n  fullName: String,\n  address: String,\n  city: String,\n  state: String,\n  pincode: String,\n  phone:{type: String,unique: true} ,\n  email: { type: String, unique: true },\n  password: String,\n  companyName: String,\n  panCard: String,\n  gstNumber: String,\n  bankName: String,\n  bankAccount: String,\n  ifscCode: String,\n  taxStatus: String,\n  course: String,\n});\n\nexport default mongoose.models.User || mongoose.model('User', userSchema);\n"],"names":[],"mappings":"AAAA,iBAAiB;;;;AACjB;;AAGA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACrC,UAAU;IACV,SAAS;IACT,MAAM;IACN,OAAO;IACP,SAAS;IACT,OAAM;QAAC,MAAM;QAAO,QAAQ;IAAI;IAChC,OAAO;QAAE,MAAM;QAAQ,QAAQ;IAAK;IACpC,UAAU;IACV,aAAa;IACb,SAAS;IACT,WAAW;IACX,UAAU;IACV,aAAa;IACb,UAAU;IACV,WAAW;IACX,QAAQ;AACV;uCAEe,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/pages/api/login.js"],"sourcesContent":["import connectMongo from '../../lib/mongodb';\nimport User from '../../models/User';\nimport bcrypt from 'bcryptjs';\n\nexport default async function handler(req, res) {\n  if (req.method !== 'POST') return res.status(405).end();\n\n  const { identifier, password } = req.body;\n  if (!identifier || !password) {\n    return res.status(400).json({ message: 'Email and password are required' });\n  }\n\n  try {\n    await connectMongo();\n\n    const user = await User.findOne({ email: identifier });\n    if (!user) {\n      return res.status(401).json({ message: 'Invalid credentials' });\n    }\n\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(401).json({ message: 'Invalid credentials' });\n    }\n\n    const { password: _, ...safeUser } = user.toObject();\n    res.status(200).json({ message: 'Login successful', user: safeUser });\n  } catch (error) {\n    console.error('Login error:', error);\n    res.status(500).json({ message: 'Something went wrong' });\n  }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,IAAI,IAAI,MAAM,KAAK,QAAQ,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG;IAErD,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI;IACzC,IAAI,CAAC,cAAc,CAAC,UAAU;QAC5B,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAkC;IAC3E;IAEA,IAAI;QACF,MAAM,CAAA,GAAA,uGAAA,CAAA,UAAY,AAAD;QAEjB,MAAM,OAAO,MAAM,uGAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAE,OAAO;QAAW;QACpD,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAsB;QAC/D;QAEA,MAAM,UAAU,MAAM,gHAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAC5D,IAAI,CAAC,SAAS;YACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAsB;QAC/D;QAEA,MAAM,EAAE,UAAU,CAAC,EAAE,GAAG,UAAU,GAAG,KAAK,QAAQ;QAClD,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAoB,MAAM;QAAS;IACrE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;QAAuB;IACzD;AACF","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///Users/vanshsingla/Documents/DAtagami/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,gHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,gHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}